from datetime import datetime

def display_menu():
    print("\nWhat would you like to do?")
    print("1. Add a New Task")
    print("2. View All Tasks")
    print("3. Mark a Task as Complete")
    print("4. Save and Exit")

def add_task(tasks):
    description = input("Enter the task description: ").strip()
    if not description:
        print("Task description cannot be empty. Task not added.")
        return

    due_date_input = input("Enter due date (YYYY-MM-DD) or press Enter for no due date: ").strip()
    if due_date_input:
        try:
            due_date = datetime.strptime(due_date_input, "%Y-%m-%d").date()
        except ValueError:
            print("Invalid date format. Please enter the date in YYYY-MM-DD format.")
            return
    else:
        due_date = None

    tasks.append({"description": description, "due_date": due_date})
    print(f"Task '{description}' added successfully!")

def view_tasks(tasks):
    if not tasks:
        print("No tasks available. Add some tasks first!")
        return

    tasks.sort(key=lambda task: (task["due_date"] is None, task["due_date"]))
    print("\nHere are your tasks:")

    for i, task in enumerate(tasks, start=1):
        due_date = task["due_date"].strftime("%Y-%m-%d") if task["due_date"] else "No due date"
        print(f"{i}. {task['description']} - Due: {due_date}")

    print(f"\nTotal tasks: {len(tasks)}")

def complete_task(tasks):
    if not tasks:
        print("No tasks available to complete.")
        return

    view_tasks(tasks)
    try:
        task_number = int(input("Enter the task number to mark as complete: ")) - 1
        if 0 <= task_number < len(tasks):
            completed_task = tasks.pop(task_number)
            print(f"Task '{completed_task['description']}' marked as complete.")
        else:
            print("Invalid number. Please choose a valid task number.")
    except ValueError:
        print("Invalid input. Please enter a number.")

def save_tasks(tasks):
    with open("tasks.txt", "w") as file:
        for task in tasks:
            due_date = task["due_date"].strftime("%Y-%m-%d") if task["due_date"] else ""
            file.write(f"{task['description']}|{due_date}\n")
    print("All tasks saved successfully.")

def load_tasks():
    tasks = []
    try:
        with open("tasks.txt", "r") as file:
            for line in file:
                description, due_date = line.strip().split("|")
                due_date = datetime.strptime(due_date, "%Y-%m-%d").date() if due_date else None
                tasks.append({"description": description, "due_date": due_date})
    except FileNotFoundError:
        print("No saved tasks found. Starting with an empty to-do list.")
    return tasks

def main():
    tasks = load_tasks()

    while True:
        display_menu()
        choice = input("Select an option (1-4): ").strip()

        if choice == '1':
            add_task(tasks)
        elif choice == '2':
            view_tasks(tasks)
        elif choice == '3':
            complete_task(tasks)
        elif choice == '4':
            save_tasks(tasks)
            print("Goodbye!")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 4.")

if __name__ == "__main__":
    main()
